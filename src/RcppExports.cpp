// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// profileloglik
Rcpp::List profileloglik(arma::mat sigma, arma::mat S, int n);
RcppExport SEXP _gicf_profileloglik(SEXP sigmaSEXP, SEXP SSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type S(SSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(profileloglik(sigma, S, n));
    return rcpp_result_gen;
END_RCPP
}
// gicf_wrapper
Rcpp::List gicf_wrapper(arma::mat start, arma::umat adj, int n, arma::mat S, arma::vec lambda, double lambda_max, double tolout, double tolin, double iterout, double iterin);
RcppExport SEXP _gicf_gicf_wrapper(SEXP startSEXP, SEXP adjSEXP, SEXP nSEXP, SEXP SSEXP, SEXP lambdaSEXP, SEXP lambda_maxSEXP, SEXP toloutSEXP, SEXP tolinSEXP, SEXP iteroutSEXP, SEXP iterinSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type start(startSEXP);
    Rcpp::traits::input_parameter< arma::umat >::type adj(adjSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type S(SSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< double >::type lambda_max(lambda_maxSEXP);
    Rcpp::traits::input_parameter< double >::type tolout(toloutSEXP);
    Rcpp::traits::input_parameter< double >::type tolin(tolinSEXP);
    Rcpp::traits::input_parameter< double >::type iterout(iteroutSEXP);
    Rcpp::traits::input_parameter< double >::type iterin(iterinSEXP);
    rcpp_result_gen = Rcpp::wrap(gicf_wrapper(start, adj, n, S, lambda, lambda_max, tolout, tolin, iterout, iterin));
    return rcpp_result_gen;
END_RCPP
}
